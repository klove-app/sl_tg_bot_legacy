from telebot.types import Message
from database.models.user import User
from database.models.running_log import RunningLog
import traceback
from handlers.base_handler import BaseHandler

class GoalHandler(BaseHandler):
    def register(self):
        """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ü–µ–ª–µ–π"""
        self.logger.info("Registering goal handlers")
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –Ω–∞–ø—Ä—è–º—É—é
        self.bot.register_message_handler(
            self.handle_setgoal,
            commands=['setgoal']
        )
        
        self.logger.info("Goal handlers registered successfully")

    def handle_setgoal(self, message: Message):
        """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≥–æ–¥–æ–≤—É—é —Ü–µ–ª—å"""
        self.log_message(message, "setgoal")
        try:
            args = message.text.split()
            if len(args) != 2:
                self.bot.reply_to(message, "‚ùå –£–∫–∞–∂–∏—Ç–µ —Ü–µ–ª—å –≤ –∫–∏–ª–æ–º–µ—Ç—Ä–∞—Ö\n–ü—Ä–∏–º–µ—Ä: /setgoal 1000")
                return

            try:
                goal_km = float(args[1].replace(',', '.'))
            except ValueError:
                self.bot.reply_to(message, "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —á–∏—Å–ª–∞")
                return

            if goal_km <= 0:
                self.bot.reply_to(message, "‚ùå –¶–µ–ª—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –±–æ–ª—å—à–µ –Ω—É–ª—è")
                return

            user_id = str(message.from_user.id)
            self.logger.info(f"Getting user {user_id} from database")
            user = User.get_by_id(user_id)
            if not user:
                username = message.from_user.username or message.from_user.first_name
                user = User.create(user_id=user_id, username=username)
                self.logger.info(f"Created new user: {username} ({user_id})")

            user.goal_km = goal_km
            user.save()
            self.logger.info(f"Updated goal for user {user_id} to {goal_km} km")

            total_km = RunningLog.get_user_total_km(user_id)
            progress = (total_km / goal_km * 100)

            response = f"üéØ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —Ü–µ–ª—å –Ω–∞ –≥–æ–¥: {goal_km:.2f} –∫–º\n"
            response += f"üìä –¢–µ–∫—É—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å: {total_km:.2f} –∫–º ({progress:.2f}%)"

            self.logger.info(f"Sending response: {response}")
            self.bot.reply_to(message, response)
            self.logger.info(f"Set goal {goal_km}km for user {user_id}")
        except Exception as e:
            self.logger.error(f"Error in handle_setgoal: {e}")
            self.logger.error(f"Full traceback: {traceback.format_exc()}")
            self.bot.reply_to(message, "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ —Ü–µ–ª–∏")

def register_handlers(bot):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Ü–µ–ª–µ–π"""
    handler = GoalHandler(bot)
    handler.register() 