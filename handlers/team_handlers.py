from services.team_service import TeamService

def register_handlers(bot):
    @bot.message_handler(commands=['createteam'])
    def create_team(message):
        try:
            team_name = ' '.join(message.text.split()[1:])
            if not team_name:
                bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: /createteam [–Ω–∞–∑–≤–∞–Ω–∏–µ]")
                return

            user_id = str(message.from_user.id)
            team = TeamService.create_team(team_name, user_id)
            
            response = f"–ö–æ–º–∞–Ω–¥–∞ '{team_name}' —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!\n"
            response += f"ID –∫–æ–º–∞–Ω–¥—ã: {team.team_id}"
            
            bot.reply_to(message, response)
            
        except Exception as e:
            bot.reply_to(message, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

    @bot.message_handler(commands=['teamstats'])
    def team_stats(message):
        try:
            user_id = str(message.from_user.id)
            teams_stats = TeamService.get_user_teams_stats(user_id)
            
            if not teams_stats:
                bot.reply_to(message, "–í—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç–µ –Ω–∏ –≤ –æ–¥–Ω–æ–π –∫–æ–º–∞–Ω–¥–µ")
                return
                
            response = "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–æ–º–∞–Ω–¥:\n\n"
            
            for team_data in teams_stats:
                team = team_data['team']
                stats = team_data['stats']
                
                response += f"üë• –ö–æ–º–∞–Ω–¥–∞: {team.team_name}\n"
                response += "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π:\n"
                
                for member in stats:
                    response += f"üèÉ‚Äç‚ôÇÔ∏è {member['username']}: {member['total_km']} –∫–º\n"
                
                response += "\n"
            
            bot.reply_to(message, response)
            
        except Exception as e:
            bot.reply_to(message, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}") 